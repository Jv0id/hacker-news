diff --git a/dist/cli/templates/worker.js b/dist/cli/templates/worker.js
index a08eb86bc871b1a20edd7415d0addf648dabc48e..04d7a9f45d371a25ee6b2d8d547e34d80f3c9398 100644
--- a/dist/cli/templates/worker.js
+++ b/dist/cli/templates/worker.js
@@ -2,6 +2,8 @@ import { AsyncLocalStorage } from "node:async_hooks";
 import process from "node:process";
 // @ts-expect-error: resolved by wrangler build
 import * as nextEnvVars from "./env/next-env.mjs";
+import worker from "../worker";
+export * from "../workflow";
 const cloudflareContextALS = new AsyncLocalStorage();
 // Note: this symbol needs to be kept in sync with `src/api/get-cloudflare-context.ts`
 Object.defineProperty(globalThis, Symbol.for("__cloudflare-context__"), {
@@ -16,6 +18,7 @@ export { DOShardedTagCache } from "./.build/durable-objects/sharded-tag-cache.js
 // Populate process.env on the first request
 let processEnvPopulated = false;
 export default {
+    ...worker,
     async fetch(request, env, ctx) {
         return cloudflareContextALS.run({ env, ctx, cf: request.cf }, async () => {
             const url = new URL(request.url);
